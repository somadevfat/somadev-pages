name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run build
        run: npm run build

  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run backend tests
        run: mvn -B test -f backend/pom.xml
      - name: Upload surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: backend/target/surefire-reports/
          retention-days: 30
      - name: Filter paths
        id: paths-filter
        uses: dorny/paths-filter@v3.0.2
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'app/**'
              - 'components/**'
              - 'public/**'
              - 'styles/**'
              - 'types/**'
              - 'next.config.ts'
              - 'package.json'
              - 'postcss.config.mjs'
              - 'tailwind.config.js'
              - 'tsconfig.json'

      - name: Set execute permission for mvnw
        if: steps.paths-filter.outputs.backend == 'true'
        working-directory: backend
        run: |
          dos2unix mvnw
          chmod +x mvnw

      - name: Dependency Check
        if: steps.paths-filter.outputs.backend == 'true' && github.event_name == 'pull_request'
        working-directory: backend
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          ./mvnw org.owasp:dependency-check-maven:purge
          ./mvnw org.owasp:dependency-check-maven:check

  e2e-test:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Run E2E tests
        env:
          E2E_TEST_USER_EMAIL: ${{ secrets.E2E_TEST_USER_EMAIL }}
          E2E_TEST_USER_PASSWORD: ${{ secrets.E2E_TEST_USER_PASSWORD }}
        run: npm run test:e2e:docker
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Cleanup Docker
        if: always()
        run: npm run test:e2e:docker:clean

  publish-ghcr:
    name: Publish to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for frontend image
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_API_BASE_URL=/api/proxy
            API_BASE_URL_INTERNAL=http://backend:8080/api
      - name: Extract metadata for backend image
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend
      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}